{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAKC,aAAY,KACrBC,cAAcF,GACVH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAEtD,GACDA,E,CAhDQU,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAQN,MAAQd,MAAOe,EAAUC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAChEC,QAAQC,IAAIR,EAAMK,cAAcC,UAEhC,MAAMG,EAAQC,OAAON,EAAOO,OAE5B,IAAIzB,EACAC,EAAQuB,OAAOR,EAAWS,OAASD,OAAOP,EAAKQ,OAInD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOG,GAAK,EAC9B1B,EAAW0B,EAAI,EACf3B,EAAcC,EAAUC,GACrB0B,MAAKC,IACJP,QAAQC,IAAIO,EAAAhC,GAASiC,OAAOC,QAAQH,GAAW,IAEhDI,OAAMC,IACLZ,QAAQC,IAAIO,EAAAhC,GAASiC,OAAOI,QAAQD,GAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  // const formData = new FormData(event.currentTarget);\n  // formData.forEach((value, name) => {\n  //   console.log(name);\n  //   console.log(value);\n  // });\n\n  const { delay: firstDelay, step, amount } = event.currentTarget.elements;\n  console.log(event.currentTarget.elements);\n\n  const quont = Number(amount.value);\n\n  let position;\n  let delay = Number(firstDelay.value) + Number(step.value);\n\n  // const id = setInterval(() => {\n  //   clearInterval(id);\n  for (let i = 0; i < quont; i += 1) {\n    position = i + 1;\n    createPromise(position, delay)\n      .then(onResolve => {\n        console.log(Notiflix.Notify.success(onResolve));\n      })\n      .catch(onReject => {\n        console.log(Notiflix.Notify.failure(onReject));\n      });\n  }\n  // }, delay);\n  // event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const id = setInterval(() => {\n      clearInterval(id);\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    });\n  }, delay);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","id","setInterval","clearInterval","document","querySelector","addEventListener","event","preventDefault","firstDelay","step","amount","currentTarget","elements","console","log","quont","Number","value","i","then","onResolve","$parcel$interopDefault","Notify","success","catch","onReject","failure"],"version":3,"file":"03-promises.5a58ba77.js.map"}