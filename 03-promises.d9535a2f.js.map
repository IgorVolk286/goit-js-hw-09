{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAyCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhDMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAQN,IAA4CC,EAAAF,EAAMG,cAAcC,SAAxDC,EAAoCH,EAApCb,MAAmBiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjCC,QAAQC,IAAIT,EAAMG,cAAcC,UAOhC,IALA,IAAMM,EAAWC,OAAOJ,EAAOK,OAG3BC,EAAQF,OAAON,EAAWO,OAErBE,EAAI,EAAGA,EAAIJ,EAAUI,GAAK,EAGjC3B,EAFW2B,EAAI,EAESD,GACrBE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDwB,GAASF,OAAOL,EAAKM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  // const formData = new FormData(event.currentTarget);\n  // formData.forEach((value, name) => {\n  //   console.log(name);\n  //   console.log(value);\n  // });\n\n  const { delay: firstDelay, step, amount } = event.currentTarget.elements;\n  console.log(event.currentTarget.elements);\n\n  const quantity = Number(amount.value);\n\n  let position;\n  let delay = Number(firstDelay.value);\n\n  for (let i = 0; i < quantity; i += 1) {\n    position = i + 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","firstDelay","step","amount","console","log","quantity","Number","value","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.d9535a2f.js.map"}